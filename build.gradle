apply from:"dependencies.gradle"

subprojects {
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "java"
	apply plugin: "maven"
	apply plugin: "signing"

	buildscript {
		repositories {
			mavenCentral()
			jcenter()
			maven {url "http://repo.spring.io/plugins-snapshot"}
			maven {url "http://repo.spring.io/milestone"}
			maven {url "http://repo.spring.io/release"}
		}
	}

	ext {
		baseVersion = "0.1.4"
		isSnapshot = true
		snapshotSuffix = "-SNAPSHOT"
		projectVersion = baseVersion + (isSnapshot ? snapshotSuffix : "")
	}

	group = "net.simpledynamics"
	version = projectVersion

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	
	artifacts {
		archives javadocJar, sourcesJar
	}

	signing {
		required {!isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }  
		sign configurations.archives
	}

    project.ext.set("githubAutentiaUsername", project.hasProperty("githubAutentiaUsername") ? githubAutentiaUsername : System.getenv("GITHUB_AUTENTIA_USERNAME"))
    project.ext.set("githubAutentiaToken", project.hasProperty("githubAutentiaToken") ? githubAutentiaToken : System.getenv("GITHUB_AUTENTIA_TOKEN"))




	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
				
                if(githubAutentiaUsername != null && githubAutentiaToken != null) {
                    repository(url: "https://maven.pkg.github.com/cgmarcos-autentia/openid-connect-server-spring-boot") {
                        authentication(userName: githubAutentiaUsername, password: githubAutentiaToken)
                    }
                } else {
                    //for local maven deploy testing
                    repository(url: mavenLocal().url)
                }

				pom.project {
					name project.name
					description project.description
					packaging 'jar'
					url 'https://github.com/autentia/openid-connect-server-spring-boot'
					
					scm {
						connection 'scm:git:https://github.com/autentia/openid-connect-server-spring-boot'
						developerConnection 'scm:git:https://github.com/autentia/openid-connect-server-spring-boot'
						url 'https://github.com/autentia/openid-connect-server-spring-boot'
					}
	
					licenses {
						license {
							name 'The Apache License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}
	
					organization {
						name 'Simple Dynamics'
						url 'http://www.simpledynamics.net/'
					}
					
					developers {
						developer {
							id 'barretttucker'
							name 'Barrett Tucker'
							email 'barrett@simpledynamics.net'
						}
						developer {
							id 'nategrover'
							name 'Nate Grover'
							email 'nate@simpledynamics.net'
						}
					}
				}
			}
		}
	}

}
